this is the result: 
----------------------------------------------------------------------------------------------------
|Registers:                                                                                        |
 [0, 8, 72, 861, 59, 245, 73, 89]
 
----------------------------------------------------------------------------------------------------
|Program Counter:                                                                                  |
 0
 
----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
 ('0x1', '1101101110010001')
('0x2', '1111100011101110')
('0x3', '1100111111011000')
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', '1100110111000110')
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')
 
|                                                                                                  |
----------------------------------------------------------------------------------------------------
 

----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 wr(1)
 0011000001

[0, '10100111', 72, 861, 59, 245, 73, 89]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 wr(2)
 0011000010

[0, '10100111', '00010011', 861, 59, 245, 73, 89]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 wr(3)
 0011000011

[0, '10100111', '00010011', '10110100', 59, 245, 73, 89]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 wr(7)
 0011000111

[0, '10100111', '00010011', '10110100', 59, 245, 73, 0]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 smr(8)
 0111001000

[0, '10100111', '00010011', '10110100', 59, 245, 32, 0]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 32, 1]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 33, 1]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 33, 2]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 34, 2]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 34, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 35, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 35, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 36, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 36, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 37, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 37, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 38, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 38, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 39, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 39, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 40, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 40, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 41, 3]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 41, 4]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 42, 4]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 42, 5]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 43, 5]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 43, 6]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 44, 6]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 44, 6]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 45, 6]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 45, 6]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 46, 6]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 46, 6]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 47, 6]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 47, 7]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 48, 7]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 48, 7]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 49, 7]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 49, 8]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 50, 8]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 50, 9]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 51, 9]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 51, 10]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 52, 10]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 52, 10]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 53, 10]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 53, 10]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 54, 10]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 54, 11]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 55, 11]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 55, 12]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 56, 12]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 56, 12]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 57, 12]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 57, 13]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 58, 13]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 58, 14]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 59, 14]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 59, 14]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 60, 14]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 60, 14]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 61, 14]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 61, 14]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 62, 14]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 62, 15]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 63, 15]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 63, 16]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 64, 16]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 64, 17]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 65, 17]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 65, 18]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 66, 18]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 66, 19]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 67, 19]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 67, 20]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 68, 20]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 68, 20]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 69, 20]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 69, 20]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 70, 20]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 70, 20]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 71, 20]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 71, 21]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 72, 21]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 72, 21]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 73, 21]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 73, 22]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 74, 22]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 74, 23]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 75, 23]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 75, 23]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 76, 23]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 76, 24]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 77, 24]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 77, 24]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 78, 24]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 78, 24]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 79, 24]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 79, 25]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 80, 25]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 80, 26]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 81, 26]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 81, 27]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 82, 27]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 82, 28]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 83, 28]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 83, 29]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 84, 29]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 84, 30]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 85, 30]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 85, 30]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 86, 30]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 86, 31]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 87, 31]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 87, 32]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 88, 32]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 88, 33]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 89, 33]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 89, 34]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 90, 34]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 90, 35]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 91, 35]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 91, 36]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 92, 36]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 92, 36]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 93, 36]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 93, 36]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 94, 36]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 94, 37]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 95, 37]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 rxor()
 1000111111

[0, '10100111', '00010011', '10110100', 59, 245, 95, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 beq(24)
 0101011000

[0, '10100111', '00010011', '10110100', 59, 245, 96, 38]


----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
('0x1', '1101101110010001')
('0x2', '1111100011101110')
('0x3', '1100111111011000')
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', '1100110111000110')
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')

[0, '10100111', '00010011', '10110100', 59, 245, 96, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 sub(7)
 0010000111


----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
('0x1', '1101101110010001')
('0x2', 26)
('0x3', '1100111111011000')
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', '1100110111000110')
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')

[0, '10100111', '00010011', '10110100', 59, 245, 96, 38]


----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
('0x1', '1101101110010001')
('0x2', 26)
('0x3', '1100111111011000')
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', '1100110111000110')
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')

[0, '10100111', '00010011', '10110100', 59, 245, 96, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 wm(3)
 0110000011


----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
('0x1', '1101101110010001')
('0x2', 26)
('0x3', 38)
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', '1100110111000110')
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')

[0, '10100111', '00010011', '10110100', 59, 245, 96, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11110110', 59, 245, 96, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11110110', 59, 245, 97, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10110100', 59, 245, 97, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10110100', 59, 245, 98, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11001110', 59, 245, 98, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11001110', 59, 245, 99, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10011000', 59, 245, 99, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10011000', 59, 245, 100, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10101100', 59, 245, 100, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10101100', 59, 245, 101, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10101100', 59, 245, 101, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10101100', 59, 245, 102, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11001001', 59, 245, 102, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11001001', 59, 245, 103, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11100101', 59, 245, 103, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11100101', 59, 245, 104, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10111010', 59, 245, 104, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10111010', 59, 245, 105, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010100', 59, 245, 105, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010100', 59, 245, 106, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11000101', 59, 245, 106, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11000101', 59, 245, 107, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10110010', 59, 245, 107, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10110010', 59, 245, 108, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11101101', 59, 245, 108, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11101101', 59, 245, 109, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010110', 59, 245, 109, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010110', 59, 245, 110, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11011100', 59, 245, 110, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11011100', 59, 245, 111, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10001111', 59, 245, 111, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10001111', 59, 245, 112, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11101101', 59, 245, 112, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11101101', 59, 245, 113, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10011110', 59, 245, 113, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10011110', 59, 245, 114, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11010110', 59, 245, 114, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11010110', 59, 245, 115, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10001000', 59, 245, 115, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10001000', 59, 245, 116, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10101111', 59, 245, 116, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10101111', 59, 245, 117, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10000000', 59, 245, 117, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10000000', 59, 245, 118, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10000000', 59, 245, 118, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10000000', 59, 245, 119, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11100110', 59, 245, 119, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11100110', 59, 245, 120, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11010110', 59, 245, 120, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11010110', 59, 245, 121, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10100000', 59, 245, 121, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10100000', 59, 245, 122, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11011011', 59, 245, 122, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11011011', 59, 245, 123, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11000110', 59, 245, 123, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11000110', 59, 245, 124, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10100101', 59, 245, 124, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10100101', 59, 245, 125, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11001011', 59, 245, 125, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11001011', 59, 245, 126, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10111000', 59, 245, 126, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10111000', 59, 245, 127, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10001101', 59, 245, 127, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10001101', 59, 245, 128, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11100000', 59, 245, 128, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11100000', 59, 245, 129, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10101011', 59, 245, 129, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10101011', 59, 245, 130, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11010100', 59, 245, 130, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11010100', 59, 245, 131, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11101001', 59, 245, 131, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11101001', 59, 245, 132, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10110010', 59, 245, 132, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10110010', 59, 245, 133, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11000001', 59, 245, 133, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11000001', 59, 245, 134, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010101', 59, 245, 134, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010101', 59, 245, 135, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10111011', 59, 245, 135, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10111011', 59, 245, 136, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10110101', 59, 245, 136, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10110101', 59, 245, 137, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10101001', 59, 245, 137, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10101001', 59, 245, 138, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10111101', 59, 245, 138, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10111101', 59, 245, 139, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11001101', 59, 245, 139, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11001101', 59, 245, 140, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010100', 59, 245, 140, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010100', 59, 245, 141, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11101100', 59, 245, 141, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11101100', 59, 245, 142, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11111000', 59, 245, 142, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11111000', 59, 245, 143, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11001100', 59, 245, 143, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11001100', 59, 245, 144, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11100010', 59, 245, 144, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11100010', 59, 245, 145, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11111000', 59, 245, 145, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11111000', 59, 245, 146, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010111', 59, 245, 146, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010111', 59, 245, 147, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11110110', 59, 245, 147, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11110110', 59, 245, 148, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11000100', 59, 245, 148, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11000100', 59, 245, 149, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11011010', 59, 245, 149, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11011010', 59, 245, 150, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11001110', 59, 245, 150, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11001110', 59, 245, 151, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10011110', 59, 245, 151, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10011110', 59, 245, 152, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11010000', 59, 245, 152, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11010000', 59, 245, 153, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010010', 59, 245, 153, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010010', 59, 245, 154, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010100', 59, 245, 154, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010100', 59, 245, 155, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11011100', 59, 245, 155, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11011100', 59, 245, 156, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11011101', 59, 245, 156, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11011101', 59, 245, 157, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11101101', 59, 245, 157, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11101101', 59, 245, 158, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11101000', 59, 245, 158, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11101000', 59, 245, 159, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10101111', 59, 245, 159, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10101111', 59, 245, 160, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11111111', 59, 245, 160, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11111111', 59, 245, 161, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11001000', 59, 245, 161, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11001000', 59, 245, 162, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10011001', 59, 245, 162, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10011001', 59, 245, 163, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11011101', 59, 245, 163, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11011101', 59, 245, 164, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10011000', 59, 245, 164, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10011000', 59, 245, 165, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11010101', 59, 245, 165, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11010101', 59, 245, 166, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11100111', 59, 245, 166, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11100111', 59, 245, 167, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11101111', 59, 245, 167, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11101111', 59, 245, 168, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10100000', 59, 245, 168, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10100000', 59, 245, 169, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11110100', 59, 245, 169, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11110100', 59, 245, 170, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10011110', 59, 245, 170, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10011110', 59, 245, 171, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10100000', 59, 245, 171, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10100000', 59, 245, 172, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10101100', 59, 245, 172, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10101100', 59, 245, 173, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10011100', 59, 245, 173, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10011100', 59, 245, 174, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11001001', 59, 245, 174, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11001001', 59, 245, 175, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10100101', 59, 245, 175, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10100101', 59, 245, 176, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010100', 59, 245, 176, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010100', 59, 245, 177, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10010001', 59, 245, 177, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10010001', 59, 245, 178, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11101000', 59, 245, 178, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11101000', 59, 245, 179, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '11011100', 59, 245, 179, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '11011100', 59, 245, 180, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', '10100111', 59, 245, 180, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 bsq(48)
 1010110000

[0, '10100111', '00010011', '10100111', 59, 245, 181, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 search()
 0100111111

[0, '10100111', '00010011', 0, 59, 245, 181, 38]


----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
('0x1', '1101101110010001')
('0x2', 26)
('0x3', 38)
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', '1100110111000110')
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')

[0, '10100111', '00010011', 0, 59, 245, 181, 38]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 srl()
 1001000111


----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
('0x1', '1101101110010001')
('0x2', 26)
('0x3', 38)
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', '1100110111000110')
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')

[0, '10100111', '00010011', 0, 59, 245, 181, 42]


----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
('0x1', '1101101110010001')
('0x2', 26)
('0x3', 38)
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', '1100110111000110')
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')

[0, '10100111', '00010011', 0, 59, 245, 181, 42]


----------------------------------------------------------------------------------------------------
|Next Command (Translation + Binary):                                                              |
 wm(10)
 0110001010


----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
('0x1', '1101101110010001')
('0x2', 26)
('0x3', 38)
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', 42)
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')

[0, '10100111', '00010011', 0, 59, 245, 181, 42]

this is the final result for Memory result: 
----------------------------------------------------------------------------------------------------
|Registers:                                                                                        |
 [0, '10100111', '00010011', 0, 59, 245, 181, 42]
 
----------------------------------------------------------------------------------------------------
|Program Counter:                                                                                  |
 130
 
----------------------------------------------------------------------------------------------------
|Memory:                                                                                           |
 ('0x1', '1101101110010001')
('0x2', 26)
('0x3', 38)
('0x4', '1101110110111111')
('0x5', '0101110011111111')
('0x6', '1111000111100100')
('0x7', '1110011010011111')
('0x8', '1000101110101100')
('0x9', '1010011100010011')
('0xa', 42)
('0xb', '1011000010000111')
('0xc', '1101011110110011')
('0xd', '1011100011101110')
('0xe', '1000100010010110')
('0xf', '1010110011111001')
('0x10', '0100110001111111')
('0x11', '1100100010010100')
('0x12', '1111011110101011')
('0x13', '1100010010000111')
('0x14', '1011111111010001')
('0x15', '1000000010000010')
('0x16', '1011101110010011')
('0x17', '1011101010011010')
('0x18', '1110110111111001')
('0x19', '1100011011110000')
('0x1a', '0111111110100010')
('0x1b', '1000000111110001')
('0x1c', '1101011011110100')
('0x1d', '0111111111000101')
('0x1e', '1100000111110111')
('0x1f', '1001010010011010')
('0x20', '1000011011111001')
('0x21', '1000101011010111')
('0x22', '1001010111100101')
('0x23', '1001101111100000')
('0x24', '1001101110011000')
('0x25', '1110111010010101')
('0x26', '1001110010111110')
('0x27', '1111010110011111')
('0x28', '1100110110011011')
('0x29', '1110000010010000')
('0x2a', '1000110010011010')
('0x2b', '1011010110011111')
('0x2c', '1000010010100101')
('0x2d', '1001000010111000')
('0x2e', '1000010110000000')
('0x2f', '1100110110100110')
('0x30', '1001110011001001')
('0x31', '1000110011111111')
('0x32', '1010110110000001')
('0x33', '1101110011001010')
('0x34', '1000010011111100')
('0x35', '1110011111111001')
('0x36', '1001101011001000')
('0x37', '1100111111001011')
('0x38', '1101011010111001')
('0x39', '1111001011101110')
('0x3a', '1101100110010000')
('0x3b', '1001110011101011')
('0x3c', '1001100110000010')
('0x3d', '1100011010001101')
('0x3e', '1100011111111111')
('0x3f', '1111001010000001')
('0x40', '1100000110000111')
('0x41', '1100010011000011')
('0x42', '1110111111111010')
('0x43', '1111011011001110')
('0x44', '1000101010101011')
('0x45', '1111111111110110')
('0x46', '1011000110111011')
('0x47', '1001010110001001')
('0x48', '1001100010001100')
('0x49', '1011001010111111')
('0x4a', '1010100010011100')
('0x4b', '1000101110111101')
('0x4c', '1101110111111011')
('0x4d', '1101101010001111')
('0x4e', '1001001111001111')
('0x4f', '1010111111010110')
('0x50', '1011100011000100')
('0x51', '1111000011111110')
('0x52', '1111100111000010')
('0x53', '1011100010101110')
('0x54', '1010110010001100')
('0x55', '1101101010100010')
('0x56', '1110010011100011')
('0x57', '1101111011001000')
('0x58', '1100010110101000')
('0x59', '1010000111100111')
('0x5a', '1011101110101000')
('0x5b', '1010000011101010')
('0x5c', '1001000110010001')
('0x5d', '1000011111101101')
('0x5e', '1110111010100100')
('0x5f', '1111111010111110')
('0x60', '1111011010110100')
('0x61', '1100111010011000')
('0x62', '1010110010101100')
('0x63', '1100100111100101')
('0x64', '1011101010010100')
('0x65', '1100010110110010')
('0x66', '1110110110010110')
('0x67', '1101110010001111')
('0x68', '1110110110011110')
('0x69', '1101011010001000')
('0x6a', '1010111110000000')
('0x6b', '1000000011100110')
('0x6c', '1101011010100000')
('0x6d', '1101101111000110')
('0x6e', '1010010111001011')
('0x6f', '1011100010001101')
('0x70', '1110000010101011')
('0x71', '1101010011101001')
('0x72', '1011001011000001')
('0x73', '1001010110111011')
('0x74', '1011010110101001')
('0x75', '1011110111001101')
('0x76', '1001010011101100')
('0x77', '1111100011001100')
('0x78', '1110001011111000')
('0x79', '1001011111110110')
('0x7a', '1100010011011010')
('0x7b', '1100111010011110')
('0x7c', '1101000010010010')
('0x7d', '1001010011011100')
('0x7e', '1101110111101101')
('0x7f', '1110100010101111')
('0x80', '1111111111001000')
('0x81', '1001100111011101')
('0x82', '1001100011010101')
('0x83', '1110011111101111')
('0x84', '1010000011110100')
('0x85', '1001111010100000')
('0x86', '1010110010011100')
('0x87', '1100100110100101')
('0x88', '1001010010010001')
('0x89', '1110100011011100')
('0x8a', '1010011100010011')
('0x8b', '1110110111000010')
('0x8c', '1010010011101101')
('0x8d', '1100110011100010')
('0x8e', '1100001111000001')
('0x8f', '1001111011111011')
('0x90', '1101111111001010')
('0x91', '1011000010000001')
('0x92', '1001011111010101')
('0x93', '1011001011100010')
('0x94', '1000110111000101')
('0x95', '1000101111010111')
('0x96', '1011010011011001')
('0x97', '1001011011000110')
('0x98', '1110100011001100')
('0x99', '1111100110000011')
('0x9a', '1001010011011101')
('0x9b', '1011111110100011')
('0x9c', '0111111110111001')
('0x9d', '1111000010011111')
('0x9e', '1111011110001001')
('0x9f', '1000111110010111')
('0xa0', '1101001110101001')
('0xa1', '1011100011110101')
('0xa2', '1010101010100100')
('0xa3', '1111011010001111')
('0xa4', '1011111110011101')
('0xa5', '1111001010101111')
('0xa6', '1111011011100011')
('0xa7', '1001011111011000')
('0xa8', '1010001110110100')
('0xa9', '1100000110111111')
('0xaa', '1000001010010111')
('0xab', '0111011011111111')
('0xac', '1101100011001100')
('0xad', '1000110110100101')
('0xae', '1001111111111001')
('0xaf', '1111001011010011')
('0xb0', '1001110011001011')
('0xb1', '1101000010100111')
('0xb2', '1001101111101011')
('0xb3', '1000001110110110')
('0xb4', '1011111111011001')
('0xb5', '1111111111000010')
('0xb6', '1111100111111100')
('0xb7', '1101000010001001')
('0xb8', '1101000011010110')
('0xb9', '1111111110110000')
('0xba', '1001101110111010')
('0xbb', '1011011111011100')
('0xbc', '1000000110111111')
('0xbd', '1000000110011000')
('0xbe', '1000101011101110')
('0xbf', '1110010111100011')
('0xc0', '1000010010001100')
 
|                                                                                                  |
----------------------------------------------------------------------------------------------------
 
Dynamic instruction count: 308
